use super::{
	gen_pk,
	loader::{
		native::{NUM_BITS, NUM_LIMBS},
		Halo2LScalar, LoaderConfig,
	},
	transcript::{
		native::{PoseidonRead, PoseidonWrite, WIDTH},
		PoseidonReadChipset,
	},
};
use crate::{
	circuit::{FullRoundHasher, PartialRoundHasher},
	ecc::{
		EccAddConfig, EccDoubleConfig, EccMulConfig, EccTableSelectConfig, EccUnreducedLadderConfig,
	},
	gadgets::{
		absorb::AbsorbChip,
		bits2num::Bits2NumChip,
		main::{MainChip, MainConfig},
	},
	integer::{
		native::Integer, IntegerAddChip, IntegerDivChip, IntegerMulChip, IntegerReduceChip,
		IntegerSubChip,
	},
	params::poseidon_bn254_5x5::Params,
	poseidon::{sponge::PoseidonSpongeConfig, PoseidonConfig},
	rns::bn256::Bn256_4_68,
	Chip, CommonConfig, RegionCtx, ADVICE,
};
use halo2::{
	circuit::{Layouter, Region, SimpleFloorPlanner, Value},
	halo2curves::bn256::{Bn256, Fq, Fr, G1Affine},
	plonk::{create_proof, Circuit, ConstraintSystem, Error},
	poly::{
		commitment::ParamsProver,
		kzg::{
			commitment::{KZGCommitmentScheme, ParamsKZG},
			multiopen::ProverGWC,
		},
	},
	transcript::{TranscriptReadBuffer, TranscriptWriterBuffer},
};
use itertools::Itertools;
use rand::{thread_rng, RngCore};
use snark_verifier::{
	pcs::{
		kzg::{Gwc19, KzgAccumulator, KzgAs, KzgSuccinctVerifyingKey},
		AccumulationScheme, AccumulationSchemeProver,
	},
	system::halo2::{compile, Config},
	verifier::{
		plonk::{PlonkProtocol, PlonkSuccinctVerifier},
		SnarkVerifier,
	},
};

type PSV = PlonkSuccinctVerifier<KzgAs<Bn256, Gwc19>>;
type SVK = KzgSuccinctVerifyingKey<G1Affine>;

#[derive(Clone)]
/// Snark structure
pub struct Snark {
	// Protocol
	protocol: PlonkProtocol<G1Affine>,
	// Instances
	instances: Vec<Vec<Fr>>,
	// Proof
	proof: Vec<u8>,
}

impl Snark {
	/// Create a new Snark
	fn new<C: Circuit<Fr>, R: RngCore>(
		params: &ParamsKZG<Bn256>, circuit: C, instances: Vec<Vec<Fr>>, rng: &mut R,
	) -> Self {
		let pk = gen_pk(params, &circuit);
		let config = Config::kzg().with_num_instance(vec![instances.len()]);

		let protocol = compile(params, pk.get_vk(), config);

		let instances_slice: Vec<&[Fr]> = instances.iter().map(|x| x.as_slice()).collect();
		let mut transcript = PoseidonWrite::<_, G1Affine, Bn256_4_68, Params>::new(Vec::new());
		create_proof::<KZGCommitmentScheme<Bn256>, ProverGWC<_>, _, _, _, _>(
			params,
			&pk,
			&[circuit],
			&[instances_slice.as_slice()],
			rng,
			&mut transcript,
		)
		.unwrap();
		let proof = transcript.finalize();

		Self { protocol, instances, proof }
	}
}

#[derive(Debug, Clone)]
/// UnassignedSnark structure
pub struct UnassignedSnark {
	protocol: PlonkProtocol<G1Affine>,
	instances: Vec<Vec<Value<Fr>>>,
	proof: Option<Vec<u8>>,
}

impl From<Snark> for UnassignedSnark {
	fn from(snark: Snark) -> Self {
		Self {
			protocol: snark.protocol,
			instances: snark
				.instances
				.into_iter()
				.map(|instances| instances.into_iter().map(Value::known).collect_vec())
				.collect(),
			proof: Some(snark.proof),
		}
	}
}

impl UnassignedSnark {
	fn without_witnesses(&self) -> Self {
		UnassignedSnark {
			protocol: self.protocol.clone(),
			instances: self
				.instances
				.iter()
				.map(|instances| vec![Value::unknown(); instances.len()])
				.collect(),
			proof: None,
		}
	}

	fn proof(&self) -> Option<&[u8]> {
		self.proof.as_ref().map(Vec::as_slice)
	}
}

struct Aggregator {
	// Succinct Verifying Key
	svk: SVK,
	// Snarks for the aggregation
	snarks: Vec<UnassignedSnark>,
	// Instances
	instances: Vec<Fr>,
	// Accumulation Scheme Proof
	as_proof: Option<Vec<u8>>,
}

impl Clone for Aggregator {
	/// Returns a copy of the value.
	fn clone(&self) -> Self {
		Self {
			svk: self.svk.clone(),
			snarks: self.snarks.clone(),
			instances: self.instances.clone(),
			as_proof: self.as_proof.clone(),
		}
	}
}

impl Aggregator {
	/// Create a new aggregator.
	pub fn new(params: &ParamsKZG<Bn256>, snarks: Vec<Snark>) -> Self {
		let svk = params.get_g()[0].into();

		// let mut plonk_proofs = Vec::new();
		for snark in &snarks {
			let mut transcript_read: PoseidonRead<_, G1Affine, Bn256_4_68, Params> =
				PoseidonRead::init(snark.proof.as_slice());

			let proof = PSV::read_proof(
				&svk, &snark.protocol, &snark.instances, &mut transcript_read,
			)
			.unwrap();
			let res = PSV::verify(&svk, &snark.protocol, &snark.instances, &proof).unwrap();

			// plonk_proofs.extend(res);
		}

		// let mut transcript_write =
		// 	PoseidonWrite::<Vec<u8>, G1Affine, Bn256_4_68, Params>::new(Vec::new());
		// let rng = &mut thread_rng();
		// let accumulator = KzgAs::<Bn256, Gwc19>::create_proof(
		// 	&Default::default(),
		// 	&plonk_proofs,
		// 	&mut transcript_write,
		// 	rng,
		// )
		// .unwrap();
		// let as_proof = transcript_write.finalize();

		// let KzgAccumulator { lhs, rhs } = accumulator;
		// let accumulator_limbs = [lhs.x, lhs.y, rhs.x, rhs.y]
		// 	.map(|v| Integer::<_, _, NUM_LIMBS, NUM_BITS, Bn256_4_68>::from_w(v).limbs)
		// 	.concat();

		Self {
			svk,
			snarks: snarks.into_iter().map_into().collect(),
			instances: Vec::new(),
			as_proof: None,
		}
	}
}

/// AggregatorConfig structure
#[derive(Clone)]
struct AggregatorConfig {
	// Configurations for the needed circuit configs.
	pub(crate) common: CommonConfig,
	pub(crate) main: MainConfig,
	pub(crate) poseidon_sponge: PoseidonSpongeConfig,
	pub(crate) ecc_mul_scalar: EccMulConfig,
}

impl AggregatorConfig {
	fn new(
		common: CommonConfig, main: MainConfig, poseidon_sponge: PoseidonSpongeConfig,
		ecc_mul_scalar: EccMulConfig,
	) -> Self {
		Self { common, main, poseidon_sponge, ecc_mul_scalar }
	}
}

impl Circuit<Fr> for Aggregator {
	type Config = AggregatorConfig;
	type FloorPlanner = SimpleFloorPlanner;

	/// Returns a copy of this circuit with no witness values
	fn without_witnesses(&self) -> Self {
		Self {
			svk: self.svk,
			snarks: self.snarks.iter().map(UnassignedSnark::without_witnesses).collect(),
			instances: self.instances.clone(),
			as_proof: None,
		}
	}

	/// Configure the circuit.
	fn configure(meta: &mut ConstraintSystem<Fr>) -> Self::Config {
		let common = CommonConfig::new(meta);
		let main_selector = MainChip::configure(&common, meta);
		let main = MainConfig::new(main_selector);

		let full_round_selector = FullRoundHasher::configure(&common, meta);
		let partial_round_selector = PartialRoundHasher::configure(&common, meta);
		let poseidon = PoseidonConfig::new(full_round_selector, partial_round_selector);

		let absorb_selector = AbsorbChip::<Fr, WIDTH>::configure(&common, meta);
		let poseidon_sponge = PoseidonSpongeConfig::new(poseidon.clone(), absorb_selector);

		let bits2num = Bits2NumChip::configure(&common, meta);

		let int_red =
			IntegerReduceChip::<Fq, Fr, NUM_LIMBS, NUM_BITS, Bn256_4_68>::configure(&common, meta);
		let int_add =
			IntegerAddChip::<Fq, Fr, NUM_LIMBS, NUM_BITS, Bn256_4_68>::configure(&common, meta);
		let int_sub =
			IntegerSubChip::<Fq, Fr, NUM_LIMBS, NUM_BITS, Bn256_4_68>::configure(&common, meta);
		let int_mul =
			IntegerMulChip::<Fq, Fr, NUM_LIMBS, NUM_BITS, Bn256_4_68>::configure(&common, meta);
		let int_div =
			IntegerDivChip::<Fq, Fr, NUM_LIMBS, NUM_BITS, Bn256_4_68>::configure(&common, meta);

		let ladder = EccUnreducedLadderConfig::new(int_add, int_sub, int_mul, int_div);
		let add = EccAddConfig::new(int_red, int_sub, int_mul, int_div);
		let double = EccDoubleConfig::new(int_red, int_add, int_sub, int_mul, int_div);
		let table_select = EccTableSelectConfig::new(main.clone());
		let ecc_mul_scalar = EccMulConfig::new(ladder, add, double, table_select, bits2num);

		AggregatorConfig { common, main, poseidon_sponge, ecc_mul_scalar }
	}

	/// Synthesize the circuit.
	fn synthesize(
		&self, config: Self::Config, mut layouter: impl Layouter<Fr>,
	) -> Result<(), Error> {
		let assigned_instances = layouter.assign_region(
			|| "assign_instances",
			|region: Region<'_, Fr>| {
				let mut ctx = RegionCtx::new(region, 0);

				let mut advice_i = 0;
				let mut assigned_instances = Vec::new();
				for snark in &self.snarks {
					let mut instances_collector = Vec::new();
					for inst_vec in &snark.instances {
						let mut inst_vec_collector = Vec::new();
						for inst in inst_vec {
							let value =
								ctx.assign_advice(config.common.advice[advice_i], inst.clone())?;
							inst_vec_collector.push(value);

							advice_i += 1;
							if advice_i % ADVICE == 0 {
								advice_i = 0;
								ctx.next();
							}
						}
						instances_collector.push(inst_vec_collector);
					}
					assigned_instances.push(instances_collector);
				}
				Ok(assigned_instances)
			},
		)?;

		{
			let loader_config = LoaderConfig::<'_, G1Affine, _, Bn256_4_68>::new(
				layouter.namespace(|| "loader"),
				config.common.clone(),
				config.ecc_mul_scalar,
				config.main,
				config.poseidon_sponge,
			);

			// let mut accumulators = Vec::new();
			for (i, snark) in self.snarks.iter().enumerate() {
				let mut loaded_instances = Vec::new();
				for inst_vec in &assigned_instances[i] {
					let mut loaded_inst_vec = Vec::new();
					for inst in inst_vec {
						let loaded_instance =
							Halo2LScalar::new(inst.clone(), loader_config.clone());
						loaded_inst_vec.push(loaded_instance);
					}
					loaded_instances.push(loaded_inst_vec);
				}

				let protocol = snark.protocol.loaded(&loader_config);

				let mut transcript_read: PoseidonReadChipset<
					&[u8],
					G1Affine,
					_,
					Bn256_4_68,
					Params,
				> = PoseidonReadChipset::new(snark.proof(), loader_config.clone());

				let proof = PSV::read_proof(
					&self.svk, &protocol, &loaded_instances, &mut transcript_read,
				)
				.unwrap();
				let res = PSV::verify(&self.svk, &protocol, &loaded_instances, &proof).unwrap();

				// accumulators.extend(res);
			}

			// let as_proof = self.as_proof.as_ref().map(Vec::as_slice);
			// let mut transcript: PoseidonReadChipset<&[u8], G1Affine, _, Bn256_4_68, Params> =
			// 	PoseidonReadChipset::new(as_proof, loader_config);
			// let proof = KzgAs::<Bn256, Gwc19>::read_proof(
			// 	&Default::default(),
			// 	&accumulators,
			// 	&mut transcript,
			// )
			// .unwrap();

			// let accumulator =
			// 	KzgAs::<Bn256, Gwc19>::verify(&Default::default(), &accumulators, &proof).unwrap();

			// let lhs_x = accumulator.lhs.inner.x;
			// let lhs_y = accumulator.lhs.inner.y;

			// let rhs_x = accumulator.rhs.inner.x;
			// let rhs_y = accumulator.rhs.inner.y;

			// [lhs_x, lhs_y, rhs_x, rhs_y].map(|v| v.limbs).into_iter().flatten()
		};

		// for (row, inst) in accumulator_limbs.enumerate() {
		// 	layouter.constrain_instance(inst.cell(), config.common.instance, row)?;
		// }

		Ok(())
	}
}

#[cfg(test)]
mod test {

	use crate::{utils::generate_params, CommonConfig, RegionCtx};
	use halo2::{
		circuit::{Layouter, Region, SimpleFloorPlanner, Value},
		dev::MockProver,
		halo2curves::bn256::{Bn256, Fr},
		plonk::{Circuit, ConstraintSystem, Error},
		poly::Rotation,
	};
	use rand::thread_rng;

	use super::{Aggregator, Snark};

	type Scalar = Fr;

	#[derive(Clone)]
	pub struct MulConfig {
		common: CommonConfig,
	}

	/// Constructs individual cells for the configuration elements.
	#[derive(Debug, Clone)]
	pub struct MulChip<Scalar> {
		x: Value<Scalar>,
		y: Value<Scalar>,
	}

	impl MulChip<Scalar> {
		/// Create a new chip.
		pub fn new(x: Scalar, y: Scalar) -> Self {
			MulChip { x: Value::known(x), y: Value::known(y) }
		}
	}

	impl Circuit<Scalar> for MulChip<Scalar> {
		type Config = MulConfig;
		type FloorPlanner = SimpleFloorPlanner;

		fn without_witnesses(&self) -> Self {
			Self { x: Value::unknown(), y: Value::unknown() }
		}

		/// Make the circuit config.
		fn configure(meta: &mut ConstraintSystem<Scalar>) -> MulConfig {
			let common = CommonConfig::new(meta);
			let s = meta.selector();

			meta.create_gate("mul", |v_cells| {
				let x_exp = v_cells.query_advice(common.advice[0], Rotation::cur());
				let y_exp = v_cells.query_advice(common.advice[1], Rotation::cur());
				let x_next_exp = v_cells.query_advice(common.advice[0], Rotation::next());
				let s_exp = v_cells.query_selector(s);

				vec![s_exp * ((x_exp * y_exp) - x_next_exp)]
			});

			MulConfig { common }
		}

		/// Synthesize the circuit.
		fn synthesize(
			&self, config: MulConfig, mut layouter: impl Layouter<Scalar>,
		) -> Result<(), Error> {
			let result = layouter.assign_region(
				|| "assign",
				|region: Region<'_, Scalar>| {
					let mut ctx = RegionCtx::new(region, 0);
					let assigned_x = ctx.assign_advice(config.common.advice[0], self.x)?;
					let assigned_y = ctx.assign_advice(config.common.advice[1], self.y)?;
					let out = assigned_x.value().cloned() * assigned_y.value();
					ctx.next();
					let res = ctx.assign_advice(config.common.advice[0], out)?;

					Ok(res)
				},
			)?;
			layouter.constrain_instance(result.cell(), config.common.instance, 0)?;

			Ok(())
		}
	}

	// #[ignore = "Aggregator fails"]
	#[test]
	fn test_aggregator() {
		// Testing Aggregator
		let rng = &mut thread_rng();
		let k = 22;
		let params = generate_params::<Bn256>(k);

		let random_circuit_1 = MulChip::new(Fr::one(), Fr::one());
		let random_circuit_2 = MulChip::new(Fr::one(), Fr::one());

		let instances_1: Vec<Vec<Fr>> = vec![vec![Fr::one()]];
		let instances_2: Vec<Vec<Fr>> = vec![vec![Fr::one()]];

		let snark_1 = Snark::new(&params, random_circuit_1, instances_1, rng);
		let snark_2 = Snark::new(&params, random_circuit_2, instances_2, rng);

		let snarks = vec![snark_1, snark_2];
		let aggregator = Aggregator::new(&params, snarks);

		let prover = MockProver::run(k, &aggregator, vec![aggregator.instances.clone()]).unwrap();

		assert_eq!(prover.verify(), Ok(()));
	}
}

// commitments: [
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [Infinity] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [Infinity] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [Infinity] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [Infinity] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [Infinity] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [Infinity] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x04a7dc1b4b1f64a69c098732329cd3539525b99724b0810cac8ded6155f58633, 0x060beafd626801899c2bba65f09715d51c8e289e2c3fdf7db80ede27084f36d8)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x06b05b8dc2a2611a378a6e736e36eb66d33e019f67b53b47506a132cc7f951df, 0x1f2ec3b26d0435e9c1b80b75d96017b5229c459ed6b6899d5b525337bf501e06)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x170be77cd3f44a442393222f2612852efb9f3f41c686afe72c90a7a1be3130d8, 0x2f58fa79ea66014aac8c77ecd866bc7739e455211f00967180829356089089a5)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x24cf44201738fc246880ceea1776466b005b0460201129eab3777361b5dbef38, 0x2545ee49da2ba8397130b983ca7f30b5866000d243875e1a39b7f8f26c8f96d2)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x23475d4f20ad592a18a173033a9dbdd8492b041ab9b3465ebc33167a9daca368, 0x1e991da970291231d0a5e39acf0defe3534bc9548defc169f88f22759db52d10)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x18a0afaeec8e6ec3248b32684cf3a331794d83f7840f281b1c17add89712ac17, 0x2ff5f82f5fbff337c51039f63b0074842248436c7f4eaa9d1c1be0417a0cf3a2)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x09dcfcd644fe0aadf52e2657fcd5cd8a0e906ad44332b88f7fb6efc4d69de1db, 0x28803f62a1c231a133ea7fe0cea445484fe4d0567c08beb96c1831d204ac1de2)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x1ca4807b3cba146a4e62e4da31d2e96cde1a699ccf929cb4274aff309333d1c4, 0x14c95d6b4e11134123350ced9d3f0cb0ec405e8c5c540cf31d13f0561819ec34)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x169522370453f5bcf0a39adfc1a1a58b0bd39321348553f10d3aff3e33e94f86, 0x12de5b2ae01ab5fed331a4690c5c9944ef2a62b6bbf3877410f2f59efa650da9)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x12437b614adcfe7df89032bbb6fdff8f092e59faeb03966f0e8791775895d3f7, 0x1cbaccdbc90f038c719ce8d792adf22433ab5d68d17ce2b068252cf3df319a72)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x22f5332b211e7d74b19e5dd284a6cae6e2bf6fcb74657f2d55574c28cdfee509, 0x188b17b12230f68cd6ca1ae6e81ff5af8c81e841e49927c2d99d077d9ca30b77)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x21cbd812ce6d99e4f80f2cedbb42d0834be6b2b760e1a71b98454f2b03a26bd5, 0x0cdbdcb4821ef34d8f6105d97af7a79b215cfd76e1720138a8244884772fb4e8)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x29ce18a0142581acf02b747ac9239c27eba7fd065beae646ba29c3d95e98eb41, 0x14251cecc081d9377ae590e62b8e34c3d37278606f24bc218c5ee19aee30be56)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x203383412e787ff686fb5126db2e37b9785c920ba54c8c614c344ced054ba132, 0x2b59d6189f43060b01e3ba43b78b94aa9f75bd8a24fa9f95f4f4ddfff865de40)] },
// Msm { constant: None, scalars: [], bases: [] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x0445b1b774ab1395c04a0388e9cb0916250a005ef1bc365e94831cde84e8c8c4, 0x189e30c1d742a90a9c41533543333666ba48e49a56847495b4b48113cf24db35)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x0ff2ab4df1b5dace54611b38c9d0854aa77c59b17d65764970dfe74b1269e2a1, 0x2538afebf90c656fc65d249925b3e7b1c5e2a29ca493623a57b7746c3b594d75)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x2f9da7abe538eb4c2e95d18d1d5fe21fe59fa5521d7f611830be6f8867a0b14d, 0x0c46736b6ffb2cc67119ce1edfb40d95fa7f2446cb0657373a3d99183452edee)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x0a743952c459fe4f3d678bc40c92606802b8afec2edf0c7c1a9273bab7f949c5, 0x2cac2a1ee52ea8effe098ece92e7fa012287677b606000e7df6305156cddb933)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x2ff3d5322f3ea3f74ba75757f8c8a770611b89b0af8bf0982554250430be015d, 0x14b9185f497787ac5c69a8d50decf2af98a353285a54d4148957e71acbfbd9b7)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x1f54b8fe9cfe5d4f927fb16be1df81a9b12ec35b2e35fd1f16737a71f0d95355, 0x01dfa4027efa22c373ec19ec473c42b632dff55ae02a7a33fdf09f0894c42f2f)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x0be21bf6fbec73b079c276df649758125f460b049adaeb7c0766a7de41ccacd3, 0x2ac7ecb131c7db497a4c8a799d8353de4c068b8dcaba6002884da632694b3e83)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x07417189454bd8553c630c89aabfd994d6caa6780f1142b678c95ba8a5a7903e, 0x28b86f818655321992665339186de4b3594ea6a0cf429546bfcb7a9b3db4b012)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x13a8292305010ab89e776df82d1b230798cb406243ff858ad0213fc30bd552d2, 0x14267e91144b3e720598463698376959cb66f91800f947c44bddd3ec89864ab1)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x259a9232a15a5344be42bfbbb00c9a19344baf528e7f18b0b0573790f0712d93, 0x0fd775d3bc17ac52268744b357c6ee3f039b481cd16c531e55907140295e6e1e)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x2912f1cd4a959222fcaffc51308d1476c016f4a8fc367642310c86cc5a047da0, 0x2257eec8f034f427f095cdc83dde380c4e063a26cc537062611e01a21f1d42af)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x21c099adec3bfab6fd49a77027348cb8b4008b4aa64a955b1809ed915f2793bc, 0x29586318bf6ad0e8df1c8cbec98f2d478d3417b943c14cc7cdc1c01eb87b2082)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x238d7f43e47ecb435cd9d2dc7265a0e224d8bf6227a34a7d79880ee277fecdc3, 0x21521c346c45e297ceea794a2b51e8d6a76f732aed540b0d16f048c9ef2120e5)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x2c82b476d66d38033305c0e1b53c860e188259fdd28e4ce3c38369286b2096c3, 0x2b00033c6c9d871fdb91d192debf9c928c6dfc115f5404f8a23aaf4be1346109)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x1cd318cb9d23078d30fb03ec4f3303fa278e4f3b7bdf89f79ef9fec9e6db1ee7, 0x291aa275491b93a096c56132eda1e3b24f70024cedec500e8530ff6823f29f81)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x1974bb50bdfb260f8b6766c86c5757fcbdc6d787df60351a2f4ade906b9961b3, 0x08be4d39457a8449a45c6b8f10984dce13f06369526a8a3c98205c4cf8b45747)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x050f16a79af7a1b89acd336df97867b2b4a8478dfe29aa19b07e7760cf673fab, 0x1646037a64ee3ad9b0cf6c20af23ea090d6b1f87f9164962b02dce48b1d82683)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x00b2c219136c6b2c62358ba2310254e04e8d94b696b65738fff0cd66b0310cd0, 0x1b2d08ecf27048426b8ed2672c02e045998558850064b5827b67c3989b45ca29)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x0f9e39a7e606ed298a0ca2498d838166cde3e3ec74214a20b51341d58c7a5e96, 0x24e766162ba51f4414de63ffc559985aefccc0dd919870ffd00f8967c898625a)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x1d0724baf4bc6c72a399001be1f8ef3edb8ba0471c3a8fa99cb87da65a134e4f, 0x244471d115b7327603c7a0eb258f82eb4d841611bce3a89ebc7a6af64866db13)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x148c5328307b51665e06645b02d1cc4fd7ab9a43eeda9fa6452176f80c0019a1, 0x25a3680d50b248170bdeaf607cff09bd0610b42ba9924313b591409b2e0df8a1)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x24a933309ef193dbd734579fb80f43c5a7af9049b21e60a383a485ec73dbe2e6, 0x2a0580c369b87470f5cec3d0ea7548eb2e8c5886fcea063be114bfd6d2e67188)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001], bases: [(0x129a694a36e98fb90203eba3105f45f1b109def931c6f229176a8234d624cc92, 0x286726a37d742efa4d5d8de7a55da8a9299469043aea190026cf2da46355c153)] },
// Msm { constant: None, scalars: [0x0000000000000000000000000000000000000000000000000000000000000001, 0x2a42cbce9d0666ab05f254388a05a314058fe42e66bfba53adc7566a0327711b], bases: [(0x256409cfcd4b7de0101a218ba50cd2314097806dac64998da370c2a62e54756b, 0x2255647d76917c8192af6701f1d6ad3b745c969cb6c2f3946cd34b0f02e52075), (0x1b321ded4abbdf410c97604dbdc077139b09ec7fccd7c134b192ee178c00b92a, 0x175125bd4e5f1795583eee7c60bde1d22cf2428406e411328c278bd285a003cd)] }]

// commitments: [
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: {
// x: [0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000]
// y: [0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000]]
// },
// Msm { constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: {
// x: [0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000]
// y: [0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000]
// }
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: {
// x: [0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000]
// y: [0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: {
// x: [0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000]
// y: [0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001
// bases: {
// x: [0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000]
// y: [0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000]
// y: [0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000cac8ded6155f58633, 0x00000000000000000000000000000000000000000000000539525b99724b0810, 0x000000000000000000000000000000000000000000000004a69c098732329cd3, 0x00000000000000000000000000000000000000000000000000004a7dc1b4b1f6]
// y: [0x00000000000000000000000000000000000000000000000db80ede27084f36d8, 0x00000000000000000000000000000000000000000000000d51c8e289e2c3fdf7, 0x000000000000000000000000000000000000000000000001899c2bba65f09715, 0x000000000000000000000000000000000000000000000000000060beafd62680]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x000000000000000000000000000000000000000000000007506a132cc7f951df, 0x0000000000000000000000000000000000000000000000066d33e019f67b53b4, 0x0000000000000000000000000000000000000000000000011a378a6e736e36eb, 0x00000000000000000000000000000000000000000000000000006b05b8dc2a26]
// y: [0x00000000000000000000000000000000000000000000000d5b525337bf501e06, 0x00000000000000000000000000000000000000000000000b5229c459ed6b6899, 0x000000000000000000000000000000000000000000000005e9c1b80b75d96017, 0x0000000000000000000000000000000000000000000000000001f2ec3b26d043]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x [0x0000000000000000000000000000000000000000000000072c90a7a1be3130d8, 0x000000000000000000000000000000000000000000000002efb9f3f41c686afe, 0x00000000000000000000000000000000000000000000000a442393222f261285, 0x000000000000000000000000000000000000000000000000000170be77cd3f44]
// y: [0x00000000000000000000000000000000000000000000000180829356089089a5, 0x000000000000000000000000000000000000000000000007739e455211f00967, 0x0000000000000000000000000000000000000000000000014aac8c77ecd866bc, 0x0000000000000000000000000000000000000000000000000002f58fa79ea660]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: {
// x: [0x00000000000000000000000000000000000000000000000ab3777361b5dbef38, 0x000000000000000000000000000000000000000000000006b005b0460201129e, 0x00000000000000000000000000000000000000000000000c246880ceea177646, 0x00000000000000000000000000000000000000000000000000024cf44201738f]
// y: [0x00000000000000000000000000000000000000000000000a39b7f8f26c8f96d2, 0x00000000000000000000000000000000000000000000000b5866000d243875e1, 0x000000000000000000000000000000000000000000000008397130b983ca7f30, 0x0000000000000000000000000000000000000000000000000002545ee49da2ba]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: {
// x: [0x00000000000000000000000000000000000000000000000ebc33167a9daca368, 0x00000000000000000000000000000000000000000000000d8492b041ab9b3465, 0x0000000000000000000000000000000000000000000000092a18a173033a9dbd, 0x00000000000000000000000000000000000000000000000000023475d4f20ad5]
// y: [0x000000000000000000000000000000000000000000000009f88f22759db52d10, 0x00000000000000000000000000000000000000000000000e3534bc9548defc16, 0x00000000000000000000000000000000000000000000000231d0a5e39acf0def, 0x0000000000000000000000000000000000000000000000000001e991da970291]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000b1c17add89712ac17, 0x0000000000000000000000000000000000000000000000031794d83f7840f281, 0x00000000000000000000000000000000000000000000000ec3248b32684cf3a3, 0x00000000000000000000000000000000000000000000000000018a0afaeec8e6]
// y: [0x00000000000000000000000000000000000000000000000d1c1be0417a0cf3a2, 0x00000000000000000000000000000000000000000000000842248436c7f4eaa9, 0x00000000000000000000000000000000000000000000000337c51039f63b0074, 0x0000000000000000000000000000000000000000000000000002ff5f82f5fbff]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000f7fb6efc4d69de1db, 0x000000000000000000000000000000000000000000000008a0e906ad44332b88, 0x00000000000000000000000000000000000000000000000aadf52e2657fcd5cd, 0x00000000000000000000000000000000000000000000000000009dcfcd644fe0]
// y: [0x0000000000000000000000000000000000000000000000096c1831d204ac1de2, 0x00000000000000000000000000000000000000000000000484fe4d0567c08beb, 0x000000000000000000000000000000000000000000000001a133ea7fe0cea445, 0x00000000000000000000000000000000000000000000000000028803f62a1c23]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x000000000000000000000000000000000000000000000004274aff309333d1c4, 0x000000000000000000000000000000000000000000000006cde1a699ccf929cb, 0x0000000000000000000000000000000000000000000000046a4e62e4da31d2e9, 0x0000000000000000000000000000000000000000000000000001ca4807b3cba1]
// y: [0x0000000000000000000000000000000000000000000000031d13f0561819ec34, 0x00000000000000000000000000000000000000000000000b0ec405e8c5c540cf, 0x0000000000000000000000000000000000000000000000034123350ced9d3f0c, 0x00000000000000000000000000000000000000000000000000014c95d6b4e111]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x0000000000000000000000000000000000000000000000010d3aff3e33e94f86, 0x000000000000000000000000000000000000000000000008b0bd39321348553f, 0x000000000000000000000000000000000000000000000005bcf0a39adfc1a1a5, 0x000000000000000000000000000000000000000000000000000169522370453f]
// y: [0x00000000000000000000000000000000000000000000000410f2f59efa650da9, 0x0000000000000000000000000000000000000000000000044ef2a62b6bbf3877, 0x000000000000000000000000000000000000000000000005fed331a4690c5c99, 0x00000000000000000000000000000000000000000000000000012de5b2ae01ab]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000f0e8791775895d3f7, 0x000000000000000000000000000000000000000000000008f092e59faeb03966, 0x00000000000000000000000000000000000000000000000e7df89032bbb6fdff, 0x00000000000000000000000000000000000000000000000000012437b614adcf]
// y: [0x00000000000000000000000000000000000000000000000068252cf3df319a72, 0x000000000000000000000000000000000000000000000002433ab5d68d17ce2b, 0x0000000000000000000000000000000000000000000000038c719ce8d792adf2, 0x0000000000000000000000000000000000000000000000000001cbaccdbc90f0]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [x: [0x00000000000000000000000000000000000000000000000d55574c28cdfee509, 0x00000000000000000000000000000000000000000000000e6e2bf6fcb74657f2, 0x00000000000000000000000000000000000000000000000d74b19e5dd284a6ca, 0x00000000000000000000000000000000000000000000000000022f5332b211e7]
// y: [0x000000000000000000000000000000000000000000000002d99d077d9ca30b77, 0x00000000000000000000000000000000000000000000000af8c81e841e49927c, 0x0000000000000000000000000000000000000000000000068cd6ca1ae6e81ff5, 0x000000000000000000000000000000000000000000000000000188b17b12230f]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000b98454f2b03a26bd5, 0x00000000000000000000000000000000000000000000000834be6b2b760e1a71, 0x000000000000000000000000000000000000000000000009e4f80f2cedbb42d0, 0x00000000000000000000000000000000000000000000000000021cbd812ce6d9]
// y: [0x000000000000000000000000000000000000000000000008a8244884772fb4e8, 0x000000000000000000000000000000000000000000000009b215cfd76e172013, 0x0000000000000000000000000000000000000000000000034d8f6105d97af7a7, 0x0000000000000000000000000000000000000000000000000000cdbdcb4821ef]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x000000000000000000000000000000000000000000000006ba29c3d95e98eb41, 0x0000000000000000000000000000000000000000000000027eba7fd065beae64, 0x000000000000000000000000000000000000000000000001acf02b747ac9239c, 0x00000000000000000000000000000000000000000000000000029ce18a014258]
// y: [0x0000000000000000000000000000000000000000000000018c5ee19aee30be56, 0x00000000000000000000000000000000000000000000000c3d37278606f24bc2, 0x000000000000000000000000000000000000000000000009377ae590e62b8e34, 0x00000000000000000000000000000000000000000000000000014251cecc081d]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x0000000000000000000000000000000000000000000000014c344ced054ba132, 0x00000000000000000000000000000000000000000000000b9785c920ba54c8c6, 0x00000000000000000000000000000000000000000000000ff686fb5126db2e37, 0x000000000000000000000000000000000000000000000000000203383412e787]
// y: [0x000000000000000000000000000000000000000000000005f4f4ddfff865de40, 0x00000000000000000000000000000000000000000000000aa9f75bd8a24fa9f9, 0x0000000000000000000000000000000000000000000000060b01e3ba43b78b94, 0x0000000000000000000000000000000000000000000000000002b59d6189f430]
// },
// Msm { constant: None, scalars: [], bases: [] },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000e94831cde84e8c8c4, 0x0000000000000000000000000000000000000000000000016250a005ef1bc365, 0x00000000000000000000000000000000000000000000000395c04a0388e9cb09, 0x0000000000000000000000000000000000000000000000000000445b1b774ab1]
// y: [0x000000000000000000000000000000000000000000000005b4b48113cf24db35, 0x0000000000000000000000000000000000000000000000066ba48e49a5684749, 0x0000000000000000000000000000000000000000000000090a9c415335433336, 0x000000000000000000000000000000000000000000000000000189e30c1d742a]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000970dfe74b1269e2a1, 0x000000000000000000000000000000000000000000000004aa77c59b17d65764, 0x00000000000000000000000000000000000000000000000ace54611b38c9d085, 0x0000000000000000000000000000000000000000000000000000ff2ab4df1b5d]
// y: [0x00000000000000000000000000000000000000000000000a57b7746c3b594d75, 0x00000000000000000000000000000000000000000000000b1c5e2a29ca493623, 0x0000000000000000000000000000000000000000000000056fc65d249925b3e7, 0x0000000000000000000000000000000000000000000000000002538afebf90c6]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000830be6f8867a0b14d, 0x000000000000000000000000000000000000000000000001fe59fa5521d7f611, 0x00000000000000000000000000000000000000000000000b4c2e95d18d1d5fe2, 0x0000000000000000000000000000000000000000000000000002f9da7abe538e]
// y: [0x0000000000000000000000000000000000000000000000073a3d99183452edee, 0x0000000000000000000000000000000000000000000000095fa7f2446cb06573, 0x00000000000000000000000000000000000000000000000cc67119ce1edfb40d, 0x0000000000000000000000000000000000000000000000000000c46736b6ffb2]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000c1a9273bab7f949c5, 0x000000000000000000000000000000000000000000000006802b8afec2edf0c7, 0x00000000000000000000000000000000000000000000000e4f3d678bc40c9260, 0x0000000000000000000000000000000000000000000000000000a743952c459f]
// y: [0x000000000000000000000000000000000000000000000007df6305156cddb933, 0x00000000000000000000000000000000000000000000000012287677b606000e, 0x000000000000000000000000000000000000000000000008effe098ece92e7fa, 0x0000000000000000000000000000000000000000000000000002cac2a1ee52ea]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x0000000000000000000000000000000000000000000000082554250430be015d, 0x0000000000000000000000000000000000000000000000070611b89b0af8bf09, 0x000000000000000000000000000000000000000000000003f74ba75757f8c8a7, 0x0000000000000000000000000000000000000000000000000002ff3d5322f3ea]
// y: [0x0000000000000000000000000000000000000000000000048957e71acbfbd9b7, 0x00000000000000000000000000000000000000000000000af98a353285a54d41, 0x000000000000000000000000000000000000000000000007ac5c69a8d50decf2, 0x00000000000000000000000000000000000000000000000000014b9185f49778]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000f16737a71f0d95355, 0x00000000000000000000000000000000000000000000000a9b12ec35b2e35fd1, 0x00000000000000000000000000000000000000000000000d4f927fb16be1df81, 0x0000000000000000000000000000000000000000000000000001f54b8fe9cfe5]
// y: [0x000000000000000000000000000000000000000000000003fdf09f0894c42f2f, 0x00000000000000000000000000000000000000000000000b632dff55ae02a7a3, 0x000000000000000000000000000000000000000000000002c373ec19ec473c42, 0x00000000000000000000000000000000000000000000000000001dfa4027efa2]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000c0766a7de41ccacd3, 0x00000000000000000000000000000000000000000000000125f460b049adaeb7, 0x000000000000000000000000000000000000000000000003b079c276df649758, 0x0000000000000000000000000000000000000000000000000000be21bf6fbec7]
// y: [0x000000000000000000000000000000000000000000000002884da632694b3e83, 0x00000000000000000000000000000000000000000000000de4c068b8dcaba600, 0x00000000000000000000000000000000000000000000000b497a4c8a799d8353, 0x0000000000000000000000000000000000000000000000000002ac7ecb131c7d]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000678c95ba8a5a7903e, 0x0000000000000000000000000000000000000000000000094d6caa6780f1142b, 0x000000000000000000000000000000000000000000000008553c630c89aabfd9, 0x00000000000000000000000000000000000000000000000000007417189454bd]
// y: [0x000000000000000000000000000000000000000000000006bfcb7a9b3db4b012, 0x00000000000000000000000000000000000000000000000b3594ea6a0cf42954, 0x0000000000000000000000000000000000000000000000021992665339186de4, 0x00000000000000000000000000000000000000000000000000028b86f8186553]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000ad0213fc30bd552d2, 0x000000000000000000000000000000000000000000000000798cb406243ff858, 0x00000000000000000000000000000000000000000000000ab89e776df82d1b23, 0x00000000000000000000000000000000000000000000000000013a8292305010]
// y: [0x0000000000000000000000000000000000000000000000044bddd3ec89864ab1, 0x0000000000000000000000000000000000000000000000059cb66f91800f947c, 0x00000000000000000000000000000000000000000000000e7205984636983769, 0x00000000000000000000000000000000000000000000000000014267e91144b3]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x000000000000000000000000000000000000000000000000b0573790f0712d93, 0x0000000000000000000000000000000000000000000000019344baf528e7f18b, 0x00000000000000000000000000000000000000000000000344be42bfbbb00c9a, 0x000000000000000000000000000000000000000000000000000259a9232a15a5]
// y: [0x00000000000000000000000000000000000000000000000e55907140295e6e1e, 0x000000000000000000000000000000000000000000000003f039b481cd16c531, 0x00000000000000000000000000000000000000000000000c52268744b357c6ee, 0x0000000000000000000000000000000000000000000000000000fd775d3bc17a]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x000000000000000000000000000000000000000000000002310c86cc5a047da0, 0x0000000000000000000000000000000000000000000000076c016f4a8fc36764, 0x00000000000000000000000000000000000000000000000222fcaffc51308d14, 0x0000000000000000000000000000000000000000000000000002912f1cd4a959]
// y: [0x000000000000000000000000000000000000000000000002611e01a21f1d42af, 0x000000000000000000000000000000000000000000000000c4e063a26cc53706, 0x00000000000000000000000000000000000000000000000427f095cdc83dde38, 0x0000000000000000000000000000000000000000000000000002257eec8f034f]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000b1809ed915f2793bc, 0x00000000000000000000000000000000000000000000000b8b4008b4aa64a955, 0x00000000000000000000000000000000000000000000000ab6fd49a77027348c, 0x00000000000000000000000000000000000000000000000000021c099adec3bf]
// y: [0x000000000000000000000000000000000000000000000007cdc1c01eb87b2082, 0x00000000000000000000000000000000000000000000000478d3417b943c14cc, 0x000000000000000000000000000000000000000000000000e8df1c8cbec98f2d, 0x00000000000000000000000000000000000000000000000000029586318bf6ad]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000d79880ee277fecdc3, 0x00000000000000000000000000000000000000000000000e224d8bf6227a34a7, 0x00000000000000000000000000000000000000000000000b435cd9d2dc7265a0, 0x000000000000000000000000000000000000000000000000000238d7f43e47ec]
// y: [0x00000000000000000000000000000000000000000000000d16f048c9ef2120e5, 0x00000000000000000000000000000000000000000000000d6a76f732aed540b0, 0x00000000000000000000000000000000000000000000000297ceea794a2b51e8, 0x00000000000000000000000000000000000000000000000000021521c346c45e]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x000000000000000000000000000000000000000000000003c38369286b2096c3, 0x000000000000000000000000000000000000000000000000e188259fdd28e4ce, 0x000000000000000000000000000000000000000000000008033305c0e1b53c86, 0x0000000000000000000000000000000000000000000000000002c82b476d66d3]
// y: [0x000000000000000000000000000000000000000000000008a23aaf4be1346109, 0x00000000000000000000000000000000000000000000000928c6dfc115f5404f, 0x0000000000000000000000000000000000000000000000071fdb91d192debf9c, 0x0000000000000000000000000000000000000000000000000002b00033c6c9d8]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x0000000000000000000000000000000000000000000000079ef9fec9e6db1ee7, 0x00000000000000000000000000000000000000000000000fa278e4f3b7bdf89f, 0x0000000000000000000000000000000000000000000000078d30fb03ec4f3303, 0x0000000000000000000000000000000000000000000000000001cd318cb9d230]
// y: [0x00000000000000000000000000000000000000000000000e8530ff6823f29f81, 0x00000000000000000000000000000000000000000000000b24f70024cedec500, 0x000000000000000000000000000000000000000000000003a096c56132eda1e3, 0x000000000000000000000000000000000000000000000000000291aa275491b9]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001
// bases: [
// x: [0x00000000000000000000000000000000000000000000000a2f4ade906b9961b3, 0x00000000000000000000000000000000000000000000000fcbdc6d787df60351, 0x0000000000000000000000000000000000000000000000060f8b6766c86c5757, 0x0000000000000000000000000000000000000000000000000001974bb50bdfb2]
// y: [0x00000000000000000000000000000000000000000000000c98205c4cf8b45747, 0x00000000000000000000000000000000000000000000000ce13f06369526a8a3, 0x00000000000000000000000000000000000000000000000449a45c6b8f10984d, 0x00000000000000000000000000000000000000000000000000008be4d39457a8]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x000000000000000000000000000000000000000000000009b07e7760cf673fab, 0x00000000000000000000000000000000000000000000000b2b4a8478dfe29aa1, 0x000000000000000000000000000000000000000000000001b89acd336df97867, 0x000000000000000000000000000000000000000000000000000050f16a79af7a]
// y: [0x000000000000000000000000000000000000000000000002b02dce48b1d82683, 0x00000000000000000000000000000000000000000000000090d6b1f87f916496, 0x00000000000000000000000000000000000000000000000ad9b0cf6c20af23ea, 0x0000000000000000000000000000000000000000000000000001646037a64ee3]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x000000000000000000000000000000000000000000000008fff0cd66b0310cd0, 0x00000000000000000000000000000000000000000000000e04e8d94b696b6573, 0x00000000000000000000000000000000000000000000000b2c62358ba2310254, 0x00000000000000000000000000000000000000000000000000000b2c219136c6]
// y: [0x0000000000000000000000000000000000000000000000027b67c3989b45ca29, 0x0000000000000000000000000000000000000000000000045998558850064b58, 0x000000000000000000000000000000000000000000000008426b8ed2672c02e0, 0x0000000000000000000000000000000000000000000000000001b2d08ecf2704]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x000000000000000000000000000000000000000000000000b51341d58c7a5e96, 0x0000000000000000000000000000000000000000000000066cde3e3ec74214a2, 0x00000000000000000000000000000000000000000000000d298a0ca2498d8381, 0x0000000000000000000000000000000000000000000000000000f9e39a7e606e]
// y: [0x00000000000000000000000000000000000000000000000fd00f8967c898625a, 0x000000000000000000000000000000000000000000000005aefccc0dd919870f, 0x00000000000000000000000000000000000000000000000f4414de63ffc55998, 0x00000000000000000000000000000000000000000000000000024e766162ba51]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x0000000000000000000000000000000000000000000000099cb87da65a134e4f, 0x000000000000000000000000000000000000000000000003edb8ba0471c3a8fa, 0x00000000000000000000000000000000000000000000000c72a399001be1f8ef, 0x0000000000000000000000000000000000000000000000000001d0724baf4bc6]
// y: [0x00000000000000000000000000000000000000000000000ebc7a6af64866db13, 0x00000000000000000000000000000000000000000000000eb4d841611bce3a89, 0x0000000000000000000000000000000000000000000000027603c7a0eb258f82, 0x000000000000000000000000000000000000000000000000000244471d115b73]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x000000000000000000000000000000000000000000000006452176f80c0019a1, 0x000000000000000000000000000000000000000000000004fd7ab9a43eeda9fa, 0x000000000000000000000000000000000000000000000001665e06645b02d1cc, 0x000000000000000000000000000000000000000000000000000148c5328307b5]
// y: [0x000000000000000000000000000000000000000000000003b591409b2e0df8a1, 0x00000000000000000000000000000000000000000000000bd0610b42ba992431, 0x000000000000000000000000000000000000000000000008170bdeaf607cff09, 0x00000000000000000000000000000000000000000000000000025a3680d50b24]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x00000000000000000000000000000000000000000000000383a485ec73dbe2e6, 0x00000000000000000000000000000000000000000000000c5a7af9049b21e60a, 0x000000000000000000000000000000000000000000000003dbd734579fb80f43, 0x00000000000000000000000000000000000000000000000000024a933309ef19]
// y: [0x00000000000000000000000000000000000000000000000be114bfd6d2e67188, 0x00000000000000000000000000000000000000000000000eb2e8c5886fcea063, 0x00000000000000000000000000000000000000000000000470f5cec3d0ea7548, 0x0000000000000000000000000000000000000000000000000002a0580c369b87]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001],
// bases: [
// x: [0x000000000000000000000000000000000000000000000009176a8234d624cc92, 0x00000000000000000000000000000000000000000000000f1b109def931c6f22, 0x00000000000000000000000000000000000000000000000fb90203eba3105f45, 0x000000000000000000000000000000000000000000000000000129a694a36e98]
// y: [0x00000000000000000000000000000000000000000000000026cf2da46355c153, 0x00000000000000000000000000000000000000000000000a9299469043aea190, 0x00000000000000000000000000000000000000000000000efa4d5d8de7a55da8, 0x000000000000000000000000000000000000000000000000000286726a37d742]
// },
// Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001, 0x2a42cbce9d0666ab05f254388a05a314058fe42e66bfba53adc7566a0327711b],
// bases: {
// x: [0x00000000000000000000000000000000000000000000000da370c2a62e54756b, 0x00000000000000000000000000000000000000000000000314097806dac64998, 0x00000000000000000000000000000000000000000000000de0101a218ba50cd2, 0x000000000000000000000000000000000000000000000000000256409cfcd4b7]
// y: [0x0000000000000000000000000000000000000000000000046cd34b0f02e52075, 0x000000000000000000000000000000000000000000000003b745c969cb6c2f39, 0x00000000000000000000000000000000000000000000000c8192af6701f1d6ad, 0x0000000000000000000000000000000000000000000000000002255647d76917]},
//
// x: [0x000000000000000000000000000000000000000000000004b192ee178c00b92a, 0x00000000000000000000000000000000000000000000000139b09ec7fccd7c13, 0x00000000000000000000000000000000000000000000000f410c97604dbdc077, 0x0000000000000000000000000000000000000000000000000001b321ded4abbd]
// y: [0x0000000000000000000000000000000000000000000000028c278bd285a003cd, 0x00000000000000000000000000000000000000000000000d22cf2428406e4113, 0x00000000000000000000000000000000000000000000000795583eee7c60bde1, 0x000000000000000000000000000000000000000000000000000175125bd4e5f1]
// }

// ------------------------------------------------------------------------------------------------------------------------------

// lhs_eval: (0x138600b7857f971b526fc940c6574970acedf357769a23dd431b19a1f92f3d1b, 0x11c0d808c76f1b00d98b79012f64b511b79f06d2ff4d7da8c938051c701daa2e)
// rhs_sum: Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001, 0x0b0458532edda94b7abc7d9b9dabd1fbe27bf827166404ec754784b587528193, 0x25b434318906a8dd88db00bf0b3e08e90ddaf7aec7ae029466dc532eb5151c88],
// bases: [
// (0x0f8d8a7c6417f3469025bf45fb25c80e6c45c351575008616c10b2050ec1b49f, 0x0b1ffefb87a00a08ffde78947e323895428d9b675adde440ee3880d317dee67b),
// (0x0b39b50aac0d7256389a91c32ef60df115a252d5e44fe441bb3fc1857e8a787e, 0x2f68249a085916aa1b06f7d8f554804b9e3819105351a236c2087d5c27ec269c),
// (0x2af7219aa30678d20b08167534312d8277b4680aefbf00a9e0131770737d7bad, 0x3007f6331199d8189f5579bba4c59518b9e413bd8c5786162f83c35f19f8201d)
// ] }
// rhs_eval: (0x0ee1f3ecdd7d6781c5082e3a1a9fc7cbc0c771edb525259f291b7de66cd3401a, 0x2c765f41710c0d970624fd53fe00361ab3f29c0a278c6f945541142ed06afdf3)

// lhs_eval:
// x: [0x0000000000000000000000000000000000000000000000003b1e6755763ba3af, 0x00000000000000000000000000000000000000000000000bd1c6d5c7f6e38742, 0x00000000000000000000000000000000000000000000000e3643a95d10f439ae, 0x0000000000000000000000000000000000000000000000000001a131e2dfe722]
// y: [0x00000000000000000000000000000000000000000000000f67dad77a61f7062c, 0x0000000000000000000000000000000000000000000000001d82f8c9d04f60f7, 0x000000000000000000000000000000000000000000000007a7ad4732e592295e, 0x00000000000000000000000000000000000000000000000000005a7b9c22a89f]
// rhs_sum: Msm {
// constant: None,
// scalars: [0x0000000000000000000000000000000000000000000000000000000000000001, 0x0b0458532edda94b7abc7d9b9dabd1fbe27bf827166404ec754784b587528193, 0x25b434318906a8dd88db00bf0b3e08e90ddaf7aec7ae029466dc532eb5151c88],
// bases: [
// x: [0x0000000000000000000000000000000000000000000000016c10b2050ec1b49f, 0x000000000000000000000000000000000000000000000000e6c45c3515750086, 0x000000000000000000000000000000000000000000000003469025bf45fb25c8, 0x0000000000000000000000000000000000000000000000000000f8d8a7c6417f]
// y: [0x000000000000000000000000000000000000000000000000ee3880d317dee67b, 0x0000000000000000000000000000000000000000000000095428d9b675adde44, 0x00000000000000000000000000000000000000000000000a08ffde78947e3238, 0x0000000000000000000000000000000000000000000000000000b1ffefb87a00]
// ], [
// x: [0x000000000000000000000000000000000000000000000001bb3fc1857e8a787e, 0x00000000000000000000000000000000000000000000000f115a252d5e44fe44, 0x00000000000000000000000000000000000000000000000256389a91c32ef60d, 0x0000000000000000000000000000000000000000000000000000b39b50aac0d7]
// y: [0x000000000000000000000000000000000000000000000006c2087d5c27ec269c, 0x000000000000000000000000000000000000000000000004b9e3819105351a23, 0x000000000000000000000000000000000000000000000006aa1b06f7d8f55480, 0x0000000000000000000000000000000000000000000000000002f68249a08591]
// ], [
// x: [0x000000000000000000000000000000000000000000000009e0131770737d7bad, 0x000000000000000000000000000000000000000000000008277b4680aefbf00a, 0x000000000000000000000000000000000000000000000008d20b08167534312d, 0x0000000000000000000000000000000000000000000000000002af7219aa3067]
// y: [0x0000000000000000000000000000000000000000000000062f83c35f19f8201d, 0x0000000000000000000000000000000000000000000000018b9e413bd8c57861, 0x000000000000000000000000000000000000000000000008189f5579bba4c595, 0x0000000000000000000000000000000000000000000000000003007f6331199d]
// ]
// rhs_eval: [
// x: [0x00000000000000000000000000000000000000000000000f291b7de66cd3401a, 0x00000000000000000000000000000000000000000000000cbc0c771edb525259, 0x00000000000000000000000000000000000000000000000781c5082e3a1a9fc7, 0x0000000000000000000000000000000000000000000000000000ee1f3ecdd7d6]
// y: [0x0000000000000000000000000000000000000000000000045541142ed06afdf3, 0x000000000000000000000000000000000000000000000001ab3f29c0a278c6f9, 0x00000000000000000000000000000000000000000000000d970624fd53fe0036, 0x0000000000000000000000000000000000000000000000000002c765f41710c0]
// ]

// ------------------------------------------------------------------------------------------

// evaluations:
// Query { poly: 34, rotation: Rotation(-6) }: 0x19709d319eb2bb85c6e0c302d1d954b7be17d74aec88835b8f5418f57d309259,
// Query { poly: 23, rotation: Rotation(0) }: 0x0c18392c4fbd1ba66787af369d7a2db7f494310b2b91a63623956abe75fbe331,
// Query { poly: 17, rotation: Rotation(0) }: 0x195b993091a33e11c0b4d6a11417608cb83adec1bccf7ea8612ddd9222a9e2f1,
// Query { poly: 29, rotation: Rotation(-6) }: 0x280893295f52892ef85d80f592c21761d970d1a8f6a7a79a4dc6420667351a02,
// Query { poly: 21, rotation: Rotation(1) }: 0x1fc222bea2196890154b52a494db44da9d6f881d0309e15ca1742eb45b215dc3,
// Query { poly: 39, rotation: Rotation(-6) }: 0x1a56815d72886ffbd870d2c065269a2324c8f0ad2b2e10e8c23a7ccedc2afe54,
// Query { poly: 30, rotation: Rotation(1) }: 0x24fa07d999f815b1b6215244363361e55eb37f139bd2d3867e8af31aaedc1e7d,
// Query { poly: 33, rotation: Rotation(0) }: 0x2069bbd2b332497e9ea380a6a2c6ea838611dc6bf966106a03d4db10798d20d2,
// Query { poly: 41, rotation: Rotation(1) }: 0x2399a4645e64948c0c364f70dc2e8a875214f66831aa51560c9d5bcdd3cf9f08,
// Query { poly: 31, rotation: Rotation(1) }: 0x27b95859b6d6ab35fb60db453b5b7f4a6842a1775d8b86854b0cb337b09365a1,
// Query { poly: 37, rotation: Rotation(0) }: 0x09b1e4216846739d28459a0c813b23b615c9e3632a37f21b27250843c96393e7,
// Query { poly: 40, rotation: Rotation(-6) }: 0x163d97b6596402fb21a69510e93f1fc40baffe0d65b1356f25595942e2cb4ff2,
// Query { poly: 42, rotation: Rotation(0) }: 0x048d2f4327f01a71558351e49d9a73f15a41994319562a93e4a83b1641a5622b,
// Query { poly: 10, rotation: Rotation(0) }: 0x15b016cb84e1d4202b245ae277c15e5023ddeaa68b71cc1553343e9af8079084,
// Query { poly: 20, rotation: Rotation(0) }: 0x219c875bad7b38e23289c333c920d8e540993f5567d7c9ff7647670fe274a508,
// Query { poly: 39, rotation: Rotation(0) }: 0x04ade3c3dcbf5e31501c816f560603afb32402b67647bbf07d6094af6dd500a0,
// Query { poly: 31, rotation: Rotation(-6) }: 0x063088291d234838429fed3e3bf398d526c6688f37d95c82c2036066e4cb83e7,
// Query { poly: 34, rotation: Rotation(1) }: 0x19ec23fbc3c4fed6211469f058ea572fa05257ccb925dbda5f041fb97f2c0a3a,
// Query { poly: 42, rotation: Rotation(1) }: 0x2a41df41c3091a4f7a1224a97c98413dad33242fd284cfa0e4106178cb0ffe6f,
// Query { poly: 28, rotation: Rotation(0) }: 0x111eb7a3a6b7b463bbf14d66c23f8d8fe3f0a7100624d84f23d81bf633f40e78,
// Query { poly: 14, rotation: Rotation(0) }: 0x24a10fbc0d26e6f5c24f247e2b84875497fbce23059c42f6536c800b744284d1,
// Query { poly: 35, rotation: Rotation(-6) }: 0x1e0ea78152c9434231c9548279490b8bd34a52309af6bb6eb3eb70313bb5e957,
// Query { poly: 41, rotation: Rotation(-6) }: 0x0b04502f99636672950a25e050454b4fa53153a1ad5619c2ce7ce55f878813de,
// Query { poly: 32, rotation: Rotation(1) }: 0x1cbd37f64e22992e6ba51a02b9bb8c19bc2b8a35386503deaf38842565bc3c98,
// Query { poly: 37, rotation: Rotation(1) }: 0x2730185faf663c9717c597de7dca149d7488741727c38ff87c34bc9a5654805c,
// Query { poly: 32, rotation: Rotation(0) }: 0x273cb5b870f05ee720fb4de8b0cdd82241a16263a56d71fad6b0e021eb816fd7,
// Query { poly: 11, rotation: Rotation(0) }: 0x2cfc7f951e9b8dc18eca39c2939806470d257c162bee555f9e47027c1d1d402e,
// Query { poly: 18, rotation: Rotation(0) }: 0x09e2f8ead03dc9587d3407cbf40f38c97cf65f218302e45d879a865aac1ff9b3,
// Query { poly: 24, rotation: Rotation(0) }: 0x1f50ba762868f47f3a9cb4d6784a9f721c25205bc7d144c6de4299b5e21f7cf6,
// Query { poly: 36, rotation: Rotation(-6) }: 0x11735a42d9b31e50bcb099f09a174f77ed97e1b5202e2ad890a4511ae6b330a4,
// Query { poly: 25, rotation: Rotation(0) }: 0x20bf39beb0be8343e237a80d8f295d61f64647eb9b371c265d34d57d9333d369,
// Query { poly: 29, rotation: Rotation(1) }: 0x0144868dae3340e6ba9b826312a83b3430a34b407bd4eb647eb13b8e6448dd40,
// Query { poly: 35, rotation: Rotation(1) }: 0x10662f159fc8a92a0837c6c81f0dd628e8e5480eeb51fdf59908d97ed3534774,
// Query { poly: 35, rotation: Rotation(0) }: 0x01228698c0511ca11e86f4ad505a6a0e511c24ca1b986f0ebe37362476244854,
// Query { poly: 36, rotation: Rotation(1) }: 0x05d860e426947ee1f81f55bee691add1c784553cdfbbd57bed55ea1992cf1c35,
// Query { poly: 40, rotation: Rotation(1) }: 0x132432cc68c8b4756263982e80a47ceb91adbc574d96f3e0256ccd6901a07570,
// Query { poly: 29, rotation: Rotation(0) }: 0x181697430d19da4e4bbcc79cb2a3918f48539d7251afa88c2c0bc2009fed5406,
// Query { poly: 7, rotation: Rotation(0) }: 0x2ac4e72bd8a446c2592e589ece5e89981292ac6cb72c7fbc5172bfcf3c422c59,
// Query { poly: 36, rotation: Rotation(0) }: 0x12e7a159a0c282437d046a465b4aeae940ab8eafeeaa0960033d3bd6fddca7c8,
// Query { poly: 26, rotation: Rotation(0) }: 0x2e2cbf69f6413ad879f9c9cff44d99c1bc67bcc9e587d55ac7569d36ee9d87c2,
// Query { poly: 33, rotation: Rotation(1) }: 0x2281855097cc22069f459b9a1bdd03bca696d0871c41b4aea0653f4435ff7427,
// Query { poly: 34, rotation: Rotation(0) }: 0x2f97b7e9a7d5eb4c53b836cf1b37aeb3ef8b49533f74c5ec58e4f0d2e6661323,
// Query { poly: 0, rotation: Rotation(0) }: 0x0000000000000000000000000000000000000000000000000000000000000000,
// Query { poly: 27, rotation: Rotation(0) }: 0x1cc8b8f965a56ff5e7986bdc40a23fad7e6d497e39a15f7ffc238c377c84748d,
// Query { poly: 1, rotation: Rotation(0) }: 0x0000000000000000000000000000000000000000000000000000000000000000,
// Query { poly: 40, rotation: Rotation(0) }: 0x13c96cd45994c44015930f726e044348e244d5c7c769f57e79951ec9999029fa,
// Query { poly: 21, rotation: Rotation(0) }: 0x2bf4a61e9f3e04bb17fdd9ed76d094d407b7064c73095389a5af7043c7968af3,
// Query { poly: 8, rotation: Rotation(0) }: 0x17e302d54a2b556929af1366c157d8b703dbbc9b1527f2ba59d82c071af5e1d4,
// Query { poly: 15, rotation: Rotation(0) }: 0x0f4af2de4d9de8c8c91760d0a1aa40760d9945068fbd52ae92903f5ef69ab02e,
// Query { poly: 38, rotation: Rotation(1) }: 0x2d17439a83864b0b3602cbb1f5ff2c5e40be7b6112be81818bece19683b1a0ae,
// Query { poly: 6, rotation: Rotation(0) }: 0x23b1e98b5903c117c1521aafe7f9498689553bb2eac9d31af12837b44b025ba2,
// Query { poly: 2, rotation: Rotation(0) }: 0x0000000000000000000000000000000000000000000000000000000000000000,
// Query { poly: 5, rotation: Rotation(0) }: 0x0000000000000000000000000000000000000000000000000000000000000000,
// Query { poly: 37, rotation: Rotation(-6) }: 0x28e2392d51fbb38e93d3566c395dfbcf502989bcab94cde60b6fcd7e6c85b3d0,
// Query { poly: 16, rotation: Rotation(0) }: 0x2753158a5a5b65d4fd5af94ff9f085ea58458c5e3fc65d54002417508b6d2886,
// Query { poly: 9, rotation: Rotation(0) }: 0x22669261d41d22952a334091d82576fff1cd941da81699b918f528e348b03b65,
// Query { poly: 19, rotation: Rotation(0) }: 0x283e255e3d46abad138f6ebe17291f1e265d011c79f586951478e1c3171e7b6d,
// Query { poly: 31, rotation: Rotation(0) }: 0x1afc6a79b60647fcfcd72a31075b5c40ee7629fc8640ffdea524c6e3dd60e856,
// Query { poly: 30, rotation: Rotation(-6) }: 0x2fab2caf931638e0092f7fc52526d1cac307899104954b8a2d92691ada3afaee,
// Query { poly: 43, rotation: Rotation(0) }: 0x21a2d5c8f3cd22991e3fe059e32b815673c05072ba5eb09bedad3e7cc7e6f0da,
// Query { poly: 38, rotation: Rotation(0) }: 0x0bdbfa3accc445565150987d8fa92b6057faa5d48bff40719826f1e9f7942c03,
// Query { poly: 33, rotation: Rotation(-6) }: 0x122640d3996f53f56a5e157afeeacc85f73dc5e7f95a94737ada73978edb55d1,
// Query { poly: 12, rotation: Rotation(0) }: 0x04ec74623935d023e9e83eb4e8c3302201740de2d28021400691bbe6aa09d715,
// Query { poly: 39, rotation: Rotation(1) }: 0x0d880b1d83fae770659a918f3095652a996888e0f1889f7c7f419da8a4600979,
// Query { poly: 30, rotation: Rotation(0) }: 0x09735616a129719d5d72df21dc09ab5ec777b47c40ce69a0f67b3e25ea80f4e3,
// Query { poly: 3, rotation: Rotation(0) }: 0x0000000000000000000000000000000000000000000000000000000000000000,
// Query { poly: 4, rotation: Rotation(0) }: 0x0000000000000000000000000000000000000000000000000000000000000000,
// Query { poly: 32, rotation: Rotation(-6) }: 0x11a3ca3bd19bf014a0eabb102615609a9ad784be03c3b305eb599e1b14970ee4,
// Query { poly: 22, rotation: Rotation(0) }: 0x17eef3b8a492d1e35733120e8c8e9443e32b6b2fedcb672f8803f6b33ef8935b,
// Query { poly: 38, rotation: Rotation(-6) }: 0x1eb6583146acb7777e598db9ed3331186ee6e8ee05da0448d9c0849b00eadb3b,
// Query { poly: 41, rotation: Rotation(0) }: 0x1024b7dde85ba4c787caf46b54fa920414db04e5632f4c5e7158475495e36071,
// Query { poly: 13, rotation: Rotation(0) }: 0x2f90a9f524943f49f83dcc39fdc7ee30e70c940a351cbb61180ad46e4182d7a7

// evaluations: {
// Query { poly: 30, rotation: Rotation(-6) }: 0x2fab2caf931638e0092f7fc52526d1cac307899104954b8a2d92691ada3afaee
// Query { poly: 31, rotation: Rotation(1) }: 0x27b95859b6d6ab35fb60db453b5b7f4a6842a1775d8b86854b0cb337b09365a1
// Query { poly: 32, rotation: Rotation(1) }: 0x1cbd37f64e22992e6ba51a02b9bb8c19bc2b8a35386503deaf38842565bc3c98
// Query { poly: 5, rotation: Rotation(0) }: 0x0000000000000000000000000000000000000000000000000000000000000000
// Query { poly: 17, rotation: Rotation(0) }: 0x195b993091a33e11c0b4d6a11417608cb83adec1bccf7ea8612ddd9222a9e2f1
// Query { poly: 18, rotation: Rotation(0) }: 0x09e2f8ead03dc9587d3407cbf40f38c97cf65f218302e45d879a865aac1ff9b3
// Query { poly: 29, rotation: Rotation(-6) }: 0x280893295f52892ef85d80f592c21761d970d1a8f6a7a79a4dc6420667351a02
// Query { poly: 15, rotation: Rotation(0) }: 0x0f4af2de4d9de8c8c91760d0a1aa40760d9945068fbd52ae92903f5ef69ab02e
// Query { poly: 41, rotation: Rotation(1) }: 0x2399a4645e64948c0c364f70dc2e8a875214f66831aa51560c9d5bcdd3cf9f08
// Query { poly: 38, rotation: Rotation(0) }: 0x0bdbfa3accc445565150987d8fa92b6057faa5d48bff40719826f1e9f7942c03
// Query { poly: 21, rotation: Rotation(0) }: 0x2bf4a61e9f3e04bb17fdd9ed76d094d407b7064c73095389a5af7043c7968af3
// Query { poly: 29, rotation: Rotation(0) }: 0x181697430d19da4e4bbcc79cb2a3918f48539d7251afa88c2c0bc2009fed5406
// Query { poly: 7, rotation: Rotation(0) }: 0x2ac4e72bd8a446c2592e589ece5e89981292ac6cb72c7fbc5172bfcf3c422c59
// Query { poly: 11, rotation: Rotation(0) }: 0x2cfc7f951e9b8dc18eca39c2939806470d257c162bee555f9e47027c1d1d402e
// Query { poly: 21, rotation: Rotation(1) }: 0x1fc222bea2196890154b52a494db44da9d6f881d0309e15ca1742eb45b215dc3
// Query { poly: 26, rotation: Rotation(0) }: 0x2e2cbf69f6413ad879f9c9cff44d99c1bc67bcc9e587d55ac7569d36ee9d87c2
// Query { poly: 1, rotation: Rotation(0) }: 0x0000000000000000000000000000000000000000000000000000000000000000
// Query { poly: 43, rotation: Rotation(0) }: 0x21a2d5c8f3cd22991e3fe059e32b815673c05072ba5eb09bedad3e7cc7e6f0da
// Query { poly: 10, rotation: Rotation(0) }: 0x15b016cb84e1d4202b245ae277c15e5023ddeaa68b71cc1553343e9af8079084
// Query { poly: 34, rotation: Rotation(1) }: 0x19ec23fbc3c4fed6211469f058ea572fa05257ccb925dbda5f041fb97f2c0a3a
// Query { poly: 38, rotation: Rotation(-6) }: 0x1eb6583146acb7777e598db9ed3331186ee6e8ee05da0448d9c0849b00eadb3b
// Query { poly: 38, rotation: Rotation(1) }: 0x2d17439a83864b0b3602cbb1f5ff2c5e40be7b6112be81818bece19683b1a0ae
// Query { poly: 40, rotation: Rotation(-6) }: 0x163d97b6596402fb21a69510e93f1fc40baffe0d65b1356f25595942e2cb4ff2
// Query { poly: 36, rotation: Rotation(0) }: 0x12e7a159a0c282437d046a465b4aeae940ab8eafeeaa0960033d3bd6fddca7c8
// Query { poly: 42, rotation: Rotation(1) }: 0x2a41df41c3091a4f7a1224a97c98413dad33242fd284cfa0e4106178cb0ffe6f
// Query { poly: 35, rotation: Rotation(1) }: 0x10662f159fc8a92a0837c6c81f0dd628e8e5480eeb51fdf59908d97ed3534774
// Query { poly: 35, rotation: Rotation(0) }: 0x01228698c0511ca11e86f4ad505a6a0e511c24ca1b986f0ebe37362476244854
// Query { poly: 36, rotation: Rotation(-6) }: 0x11735a42d9b31e50bcb099f09a174f77ed97e1b5202e2ad890a4511ae6b330a4
// Query { poly: 23, rotation: Rotation(0) }: 0x0c18392c4fbd1ba66787af369d7a2db7f494310b2b91a63623956abe75fbe331
// Query { poly: 36, rotation: Rotation(1) }: 0x05d860e426947ee1f81f55bee691add1c784553cdfbbd57bed55ea1992cf1c35
// Query { poly: 31, rotation: Rotation(-6) }: 0x063088291d234838429fed3e3bf398d526c6688f37d95c82c2036066e4cb83e7
// Query { poly: 34, rotation: Rotation(0) }: 0x2f97b7e9a7d5eb4c53b836cf1b37aeb3ef8b49533f74c5ec58e4f0d2e6661323
// Query { poly: 22, rotation: Rotation(0) }: 0x17eef3b8a492d1e35733120e8c8e9443e32b6b2fedcb672f8803f6b33ef8935b
// Query { poly: 4, rotation: Rotation(0) }: 0x0000000000000000000000000000000000000000000000000000000000000000
// Query { poly: 32, rotation: Rotation(-6) }: 0x11a3ca3bd19bf014a0eabb102615609a9ad784be03c3b305eb599e1b14970ee4
// Query { poly: 37, rotation: Rotation(-6) }: 0x28e2392d51fbb38e93d3566c395dfbcf502989bcab94cde60b6fcd7e6c85b3d0
// Query { poly: 20, rotation: Rotation(0) }: 0x219c875bad7b38e23289c333c920d8e540993f5567d7c9ff7647670fe274a508
// Query { poly: 39, rotation: Rotation(1) }: 0x0d880b1d83fae770659a918f3095652a996888e0f1889f7c7f419da8a4600979
// Query { poly: 33, rotation: Rotation(-6) }: 0x122640d3996f53f56a5e157afeeacc85f73dc5e7f95a94737ada73978edb55d1
// Query { poly: 12, rotation: Rotation(0) }: 0x04ec74623935d023e9e83eb4e8c3302201740de2d28021400691bbe6aa09d715
// Query { poly: 34, rotation: Rotation(-6) }: 0x19709d319eb2bb85c6e0c302d1d954b7be17d74aec88835b8f5418f57d309259
// Query { poly: 19, rotation: Rotation(0) }: 0x283e255e3d46abad138f6ebe17291f1e265d011c79f586951478e1c3171e7b6d
// Query { poly: 39, rotation: Rotation(-6) }: 0x1a56815d72886ffbd870d2c065269a2324c8f0ad2b2e10e8c23a7ccedc2afe54
// Query { poly: 14, rotation: Rotation(0) }: 0x24a10fbc0d26e6f5c24f247e2b84875497fbce23059c42f6536c800b744284d1
// Query { poly: 16, rotation: Rotation(0) }: 0x2753158a5a5b65d4fd5af94ff9f085ea58458c5e3fc65d54002417508b6d2886
// Query { poly: 6, rotation: Rotation(0) }: 0x23b1e98b5903c117c1521aafe7f9498689553bb2eac9d31af12837b44b025ba2
// Query { poly: 33, rotation: Rotation(0) }: 0x2069bbd2b332497e9ea380a6a2c6ea838611dc6bf966106a03d4db10798d20d2
// Query { poly: 40, rotation: Rotation(1) }: 0x132432cc68c8b4756263982e80a47ceb91adbc574d96f3e0256ccd6901a07570
// Query { poly: 13, rotation: Rotation(0) }: 0x2f90a9f524943f49f83dcc39fdc7ee30e70c940a351cbb61180ad46e4182d7a7
// Query { poly: 30, rotation: Rotation(0) }: 0x09735616a129719d5d72df21dc09ab5ec777b47c40ce69a0f67b3e25ea80f4e3
// Query { poly: 42, rotation: Rotation(0) }: 0x048d2f4327f01a71558351e49d9a73f15a41994319562a93e4a83b1641a5622b
// Query { poly: 39, rotation: Rotation(0) }: 0x04ade3c3dcbf5e31501c816f560603afb32402b67647bbf07d6094af6dd500a0
// Query { poly: 3, rotation: Rotation(0) }: 0x0000000000000000000000000000000000000000000000000000000000000000
// Query { poly: 9, rotation: Rotation(0) }: 0x22669261d41d22952a334091d82576fff1cd941da81699b918f528e348b03b65
// Query { poly: 0, rotation: Rotation(0) }: 0x0000000000000000000000000000000000000000000000000000000000000000
// Query { poly: 40, rotation: Rotation(0) }: 0x13c96cd45994c44015930f726e044348e244d5c7c769f57e79951ec9999029fa
// Query { poly: 24, rotation: Rotation(0) }: 0x1f50ba762868f47f3a9cb4d6784a9f721c25205bc7d144c6de4299b5e21f7cf6
// Query { poly: 37, rotation: Rotation(1) }: 0x2730185faf663c9717c597de7dca149d7488741727c38ff87c34bc9a5654805c
// Query { poly: 8, rotation: Rotation(0) }: 0x17e302d54a2b556929af1366c157d8b703dbbc9b1527f2ba59d82c071af5e1d4
// Query { poly: 37, rotation: Rotation(0) }: 0x09b1e4216846739d28459a0c813b23b615c9e3632a37f21b27250843c96393e7
// Query { poly: 35, rotation: Rotation(-6) }: 0x1e0ea78152c9434231c9548279490b8bd34a52309af6bb6eb3eb70313bb5e957
// Query { poly: 29, rotation: Rotation(1) }: 0x0144868dae3340e6ba9b826312a83b3430a34b407bd4eb647eb13b8e6448dd40
// Query { poly: 31, rotation: Rotation(0) }: 0x1afc6a79b60647fcfcd72a31075b5c40ee7629fc8640ffdea524c6e3dd60e856
// Query { poly: 25, rotation: Rotation(0) }: 0x20bf39beb0be8343e237a80d8f295d61f64647eb9b371c265d34d57d9333d369
// Query { poly: 33, rotation: Rotation(1) }: 0x2281855097cc22069f459b9a1bdd03bca696d0871c41b4aea0653f4435ff7427
// Query { poly: 32, rotation: Rotation(0) }: 0x273cb5b870f05ee720fb4de8b0cdd82241a16263a56d71fad6b0e021eb816fd7
// Query { poly: 41, rotation: Rotation(0) }: 0x1024b7dde85ba4c787caf46b54fa920414db04e5632f4c5e7158475495e36071
// Query { poly: 27, rotation: Rotation(0) }: 0x1cc8b8f965a56ff5e7986bdc40a23fad7e6d497e39a15f7ffc238c377c84748d
// Query { poly: 41, rotation: Rotation(-6) }: 0x0b04502f99636672950a25e050454b4fa53153a1ad5619c2ce7ce55f878813de
// Query { poly: 2, rotation: Rotation(0) }: 0x0000000000000000000000000000000000000000000000000000000000000000
// Query { poly: 28, rotation: Rotation(0) }: 0x111eb7a3a6b7b463bbf14d66c23f8d8fe3f0a7100624d84f23d81bf633f40e78
// Query { poly: 30, rotation: Rotation(1) }: 0x24fa07d999f815b1b6215244363361e55eb37f139bd2d3867e8af31aaedc1e7d

// common_poly_eval:
// zn: 0x2a812e4fa3b8fc4eb78d8fff53e54801d2a4c94ac788b6672befc4c76ae042ac,
// zn_minus_one: 0x2a812e4fa3b8fc4eb78d8fff53e54801d2a4c94ac788b6672befc4c76ae042ab,
// zn_minus_one_inv: Fraction {
// numer: None,
// denom: 0x1a54f8edca0fc3a3c478685c8cb5ebe0a886149e5f1851b6abff463c9562e6c2,
// eval: Some(0x1a54f8edca0fc3a3c478685c8cb5ebe0a886149e5f1851b6abff463c9562e6c2), inv: true },
// identity: 0x08d6ae4683746272d61fe26404a385369f701566ef7bd0674d7507ee77e935de,
// lagrange: {
// -6: Fraction {
// numer: None,
// denom: 0x08044c2572000ac51565dbb539564e6d788810925040d75d4294bd1f52656fbf,
// eval: Some(0x01ab9a9c22aa0d94fc04d4437a793be96d5acd6fc02dc6f56f0c1e87d2745a4f),
// inv: true
// },
// -5: Fraction {
// numer: None,
// denom: 0x28fcff40bcd7634222ee05bf4227c14d66387e1a98826c9ed3cf66446f93db95,
// eval: Some(0x19df8dc27e6aa7182c8ffa2ccc37f1cf52f31c22488f536568b1afec2fd2ab7c),
// inv: true
// },
// -4: Fraction {
// numer: None,
// denom: 0x01758e90d0cd48f1d91c8e24c9290dc69fa9626d44a273e49d886b544cedeafd,
// eval: Some(0x2212102be97110125a450879fbd0e3caec1a795aa118d4435f2361340217ba7a),
// inv: true
// },
// -3: Fraction {
// numer: None,
// denom: 0x16125949ff7c6651c397f88a01dddf7d30b30da2c0f75e5c8eaf35359395c3ea,
// eval: Some(0x05f106880f4b639a098caaf9c71d5b82ce6810dfc3071f18bc912be8212f9e6a),
// inv: true
// },
// -2: Fraction {
// numer: None,
// denom: 0x202453e241982b4886a0246f1633818afc0ac48aa089cd98f99341188fb93632,
// eval: Some(0x1df4a15c5f4e727c6e1fd2fb9eb1dfe1f24ac30cfa7784c590e080607e4cd836),
// inv: true
// },
// -1: Fraction {
// numer: None,
// denom: 0x10d196991257091599f3911e3d3806cf2925c707c24075be24b8fdbe8671b18d,
// eval: Some(0x2b6927e9ee3b58b9fb0a7c1c3e6eec58ca8f21de1c84da9023a156ef55774d8c),
// inv: true
// },
// 0: Fraction {
// numer: None,
// denom: 0x138fffd95bd8b09a50f75dc30fb8a196e418a840253dc8c90d3d8d0e84bca238,
// eval: Some(0x0dc00657b58add634e14d570a83d80324be162f0ef3ef738578a81fb521e02d1),
// inv: true
// }} }

// common_poly_eval:
// zn: 0x2a812e4fa3b8fc4eb78d8fff53e54801d2a4c94ac788b6672befc4c76ae042ac
// zn_minus_one: 0x2a812e4fa3b8fc4eb78d8fff53e54801d2a4c94ac788b6672befc4c76ae042ab
// zn_minus_one_inv: Fraction {
// numer: None,
// denom: 0x1a54f8edca0fc3a3c478685c8cb5ebe0a886149e5f1851b6abff463c9562e6c2
// eval:
// 0x1a54f8edca0fc3a3c478685c8cb5ebe0a886149e5f1851b6abff463c9562e6c2
// inv: true
// identity: 0x08d6ae4683746272d61fe26404a385369f701566ef7bd0674d7507ee77e935de
// lagrange: {
// -6: Fraction {
// numer: None,
// denom: 0x08044c2572000ac51565dbb539564e6d788810925040d75d4294bd1f52656fbf
// eval: 0x01ab9a9c22aa0d94fc04d4437a793be96d5acd6fc02dc6f56f0c1e87d2745a4f
// inv: true
// },
// -5: Fraction {
// numer: None,
// denom:
// 0x28fcff40bcd7634222ee05bf4227c14d66387e1a98826c9ed3cf66446f93db95
// eval: 0x19df8dc27e6aa7182c8ffa2ccc37f1cf52f31c22488f536568b1afec2fd2ab7c
// inv: true
// },
// -4: Fraction {
// numer: None,
// denom: 0x01758e90d0cd48f1d91c8e24c9290dc69fa9626d44a273e49d886b544cedeafd
// eval: 0x2212102be97110125a450879fbd0e3caec1a795aa118d4435f2361340217ba7a
// inv: true
// },
// -3: 0x16125949ff7c6651c397f88a01dddf7d30b30da2c0f75e5c8eaf35359395c3ea
// eval: 0x05f106880f4b639a098caaf9c71d5b82ce6810dfc3071f18bc912be8212f9e6a
// -2: Fraction {
// numer: None,
// denom: 0x202453e241982b4886a0246f1633818afc0ac48aa089cd98f99341188fb93632
// eval: 0x1df4a15c5f4e727c6e1fd2fb9eb1dfe1f24ac30cfa7784c590e080607e4cd836
// inv: true
// },
// -1: Fraction {
// numer: None,
// denom: 0x10d196991257091599f3911e3d3806cf2925c707c24075be24b8fdbe8671b18d
// eval: 0x2b6927e9ee3b58b9fb0a7c1c3e6eec58ca8f21de1c84da9023a156ef55774d8c
// inv: true
// },
// 0: Fraction {
// numer: None,
// denom: 0x138fffd95bd8b09a50f75dc30fb8a196e418a840253dc8c90d3d8d0e84bca238
// eval: 0x0dc00657b58add634e14d570a83d80324be162f0ef3ef738578a81fb521e02d1
// inv: true
